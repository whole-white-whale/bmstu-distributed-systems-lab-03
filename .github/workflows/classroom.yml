name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.1"

      - name: Install app dependencies
        run: go mod tidy

      - name: Build gateway
        run: go build -v ./cmd/gateway/main.go

      - name: Build cars service
        run: go build -v ./cmd/car/main.go

      - name: Build rental service
        run: go build -v ./cmd/car/main.go

      - name: Build payment service
        run: go build -v ./cmd/car/main.go

  unit_test:
    name: Unit test
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint app
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60

      - name: Run unit tests for gateway
        run: ALLURE_OUTPUT_PATH=../../ go test -v ./internal/gateway

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: allure-results

  publish_test_report:
    needs: [unit_test]
    name: Publish test report
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download current test reports
        uses: actions/download-artifact@v4
        with:
          name: test-reports
          path: allure-results

      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: allure-results
          keep_reports: 50

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

  api_test:
    needs: [unit_test]
    name: API test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU for Docker build
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build images
        timeout-minutes: 10
        run: PIPELINE_ID=${{ github.run_number }} docker compose build

      - name: Run containers
        timeout-minutes: 5
        run: |
          docker compose up -d
          ./scripts/wait-script.sh
        env:
          WAIT_PORTS: 8080,8070,8060,8050

      - name: Run API Tests
        timeout-minutes: 5
        run: ./scripts/test-script.sh
        env:
          SERVICE_NAME: payment-api
          PORT_NUMBER: 8050

      - name: Autograding
        uses: education/autograding@v1
        continue-on-error: true

      #      - name: Github auto grader mark
      #        uses: Romanow/google-sheet-autograder-marker@v1.0
      #        with:
      #          google_token: ${{secrets.GOOGLE_API_KEY}}
      #          sheet_id: "1xkgjUX6Qmk7rdJG-QPOToav-HWWtthJjnShIKnw3oIY"
      #          homework_number: 2
      #          user_column: 'D'
      #          column_offset: 'F'
      #          mark: "'+"

      - name: Cat gateway logs
        if: failure()
        run: docker logs gateway

      - name: Cat retryer logs
        if: failure()
        run: docker logs retryer

      - name: Cat cars-api logs
        if: failure()
        run: docker logs cars-api

      - name: Cat rental-api logs
        if: failure()
        run: docker logs rental-api

      - name: Cat payment-api logs
        if: failure()
        run: docker logs payment-api

      - name: Shutdown test environment
        if: always()
        timeout-minutes: 10
        run: docker compose down --volumes
